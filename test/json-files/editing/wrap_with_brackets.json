/// Test for commands relating to wrapping with brackets.

// Each test consisits with “context”, “actions”, and “expected text”.
//
// Context and expected text are JSON texts with annotations:
//
// - /*|*/ is the point.
// - /*[|*/ and /*]*/ or /*[*/ and /*|]*/ shows the region where “|” indicate
//   the point.
//
// Actions are expressions to be evaluated for each step.  It must be
// a function (or macro) call.

// context-start
[
    1, /*[|*/2, 3, 4/*]*/, 5
]
// context-end
// action: (json-par-insert-square-brackets)
// expected-start
[
    1, /*|*/[ 2, 3, 4 ], 5
]
// expected-end
// test-end

// context-start
[
    1, /*[*/2, 3, 4/*|]*/, 5
]
// context-end
// action: (json-par-insert-square-brackets)
// expected-start
[
    1, [ 2, 3, 4 ]/*|*/, 5
]
// expected-end
// test-end

// context-start
[
    1,
    /*[|*/2,
    3,
    4/*]*/,
    5
]
// context-end
// action: (json-par-insert-square-brackets)
// expected-start
[
    1,
    /*|*/[
        2,
        3,
        4
    ],
    5
]
// expected-end
// test-end

// context-start
[
    1,
    /*[|*/2, 3, 4/*]*/,
    5
]
// context-end
// action: (json-par-insert-square-brackets)
// expected-start
[
    1,
    /*|*/[ 2, 3, 4 ],
    5
]
// expected-end
// test-end

// context-start
[
    1,
    /*[|*/2, 3,
    4/*]*/,
    5
]
// context-end
// action: (json-par-insert-square-brackets)
// expected-start
[
    1,
    /*|*/[
        2, 3,
        4
    ],
    5
]
// expected-end
// test-end


// context-start
[
    1, /*[|*/2, 3, 4/*]*/, 5
]
// context-end
// action: (json-par-insert-curly-brackets)
// expected-start
[
    1, /*|*/{ "": 2, "": 3, "": 4 }, 5
]
// expected-end
// test-end

// context-start
[
    1, /*[*/2, 3, 4/*|]*/, 5
]
// context-end
// action: (json-par-insert-curly-brackets)
// expected-start
[
    1, { "": 2, "": 3, "": 4 }/*|*/, 5
]
// expected-end
// test-end

// context-start
[
    1,
    /*[|*/2,
    3,
    4/*]*/,
    5
]
// context-end
// action: (json-par-insert-curly-brackets)
// expected-start
[
    1,
    /*|*/{
        "": 2,
        "": 3,
        "": 4
    },
    5
]
// expected-end
// test-end

// context-start
{
    "": 1, /*[*/"": 2, "": 3, "": 4/*|]*/, "": 5
}
// context-end
// action: (json-par-insert-curly-brackets)
// expected-start
{
    "": 1, "": { "": 2, "": 3, "": 4 }/*|*/, "": 5
}
// expected-end
// test-end

// context-start
{
    "": 1, /*[|*/"": 2, "": 3, "": 4/*]*/, "": 5
}
// context-end
// action: (json-par-insert-curly-brackets)
// expected-start
{
    "": 1, "": /*|*/{ "": 2, "": 3, "": 4 }, "": 5
}
// expected-end
// test-end


// context-start
{
    "": 1,
    /*[|*/"": 2,
    "": 3,
    "": 4/*]*/,
    "": 5
}
// context-end
// action: (json-par-insert-curly-brackets)
// expected-start
{
    "": 1,
    "": /*|*/{
        "": 2,
        "": 3,
        "": 4
    },
    "": 5
}
// expected-end
// test-end

