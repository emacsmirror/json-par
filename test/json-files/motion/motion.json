/// Test for commands relating to motion.

// Each test consisits with “context” and “actions”.
//
// Context is a JSON text with annotations:
//
// - /*0*/ is the initial position.
// - /*n*/ where n > 0 are expected positions after each action.
// - /*0[|*/ and /*]0*/ or /*0[*/ and /*|]0*/ shows the initial region
//   where “|” indicate the point.
// - /*n[|*/ and /*]n*/ or /*n[*/ and /*|]n*/ where n > 0 shows
//   expected regions after each action.
//
// Actions are members to be evaluated for each step.  It must be
// a function (or macro) call.  Numbers after the members are just
// a comment.

/// forward-member/backward-member.

//// Before object keys.

// context-start
{
    /*0*/"": "",
    /*1*/"a": {"a": "a", "a": "a"},
    /*2*/"bb": ["b", "b"],
    /*3*/"ccc": -111.111e+111,
    /*4*/"ddd": true,
    /*5*/"ee": false,
    /*6*/"f": null/*7*//*8*/
}
// context-end
// action: (json-par-forward-member-if-special) // 1
// action: (json-par-forward-member-if-special) // 2
// action: (json-par-forward-member-if-special) // 3
// action: (json-par-forward-member-if-special) // 4
// action: (json-par-forward-member-if-special) // 5
// action: (json-par-forward-member-if-special) // 6
// action: (json-par-forward-member-if-special) // 7
// action: (json-par-forward-member-if-special) // 8
// test-end

// context-start
{
    /*6*//*7*/"": "",
    /*5*/"a": {"a": "a", "a": "a"},
    /*4*/"bb": ["b", "b"],
    /*3*/"ccc": -111.111e+111,
    /*2*/"ddd": true,
    /*1*/"ee": false,
    /*0*/"f": null
}
// context-end
// action: (json-par-backward-member-if-special) // 1
// action: (json-par-backward-member-if-special) // 2
// action: (json-par-backward-member-if-special) // 3
// action: (json-par-backward-member-if-special) // 4
// action: (json-par-backward-member-if-special) // 5
// action: (json-par-backward-member-if-special) // 6
// action: (json-par-backward-member-if-special) // 7
// test-end


//// After object keys.

// context-start
{
    ""/*0*/: "",
    "a"/*1*/: {"a": "a", "a": "a"},
    "bb"/*2*/: ["b", "b"],
    "ccc"/*3*/: -111.111e+111,
    "ddd"/*4*/: true,
    "ee"/*5*/: false,
    "f"/*6*/: null/*7*/
}
// context-end
// action: (json-par-forward-member-if-special) // 1
// action: (json-par-forward-member-if-special) // 2
// action: (json-par-forward-member-if-special) // 3
// action: (json-par-forward-member-if-special) // 4
// action: (json-par-forward-member-if-special) // 5
// action: (json-par-forward-member-if-special) // 6
// action: (json-par-forward-member-if-special) // 7
// test-end

// context-start
{
    /*7*/""/*6*/: "",
    "a"/*5*/: {"a": "a", "a": "a"},
    "bb"/*4*/: ["b", "b"],
    "ccc"/*3*/: -111.111e+111,
    "ddd"/*2*/: true,
    "ee"/*1*/: false,
    "f"/*0*/: null
}
// context-end
// action: (json-par-backward-member-if-special) // 1
// action: (json-par-backward-member-if-special) // 2
// action: (json-par-backward-member-if-special) // 3
// action: (json-par-backward-member-if-special) // 4
// action: (json-par-backward-member-if-special) // 5
// action: (json-par-backward-member-if-special) // 6
// action: (json-par-backward-member-if-special) // 7
// test-end

// context-start
{
    ""/*0*/: "",
    /*1*/1,
}
// context-end
// action: (json-par-forward-member-if-special) // 1
// test-end

// context-start
{
    /*1*/1,
    ""/*0*/: ""
}
// context-end
// action: (json-par-backward-member-if-special) // 1
// test-end


//// After colons.

// context-start
{
    "":/*0*/ "",
    "a":/*1*/ {"a": "a", "a": "a"},
    "bb":/*2*/ ["b", "b"],
    "ccc":/*3*/ -111.111e+111,
    "ddd":/*4*/ true,
    "ee":/*5*/ false,
    "f":/*6*/ null/*7*/
}
// context-end
// action: (json-par-forward-member-if-special) // 1
// action: (json-par-forward-member-if-special) // 2
// action: (json-par-forward-member-if-special) // 3
// action: (json-par-forward-member-if-special) // 4
// action: (json-par-forward-member-if-special) // 5
// action: (json-par-forward-member-if-special) // 6
// action: (json-par-forward-member-if-special) // 7
// test-end

// context-start
{
    /*7*/"":/*6*/ "",
    "a":/*5*/ {"a": "a", "a": "a"},
    "bb":/*4*/ ["b", "b"],
    "ccc":/*3*/ -111.111e+111,
    "ddd":/*2*/ true,
    "ee":/*1*/ false,
    "f":/*0*/ null
}
// context-end
// action: (json-par-backward-member-if-special) // 1
// action: (json-par-backward-member-if-special) // 2
// action: (json-par-backward-member-if-special) // 3
// action: (json-par-backward-member-if-special) // 4
// action: (json-par-backward-member-if-special) // 5
// action: (json-par-backward-member-if-special) // 6
// action: (json-par-backward-member-if-special) // 7
// test-end

// context-start
{
    "":/*0*/ "",
    /*1*/1
}
// context-end
// action: (json-par-forward-member-if-special) // 1
// test-end

// context-start
{
    /*1*/1,
    "":/*0*/ ""
}
// context-end
// action: (json-par-backward-member-if-special) // 1
// test-end


//// Before commas in an object.

// context-start
{
    "": ""/*0*/,
    "a": {"a": "a", "a": "a"}/*1*/,
    "bb": ["b", "b"]/*2*/,
    "ccc": -111.111e+111/*3*/,
    "ddd": true/*4*/,
    "ee": false/*5*/,
    "f": null/*6*/
}
// context-end
// action: (json-par-forward-member-if-special) // 1
// action: (json-par-forward-member-if-special) // 2
// action: (json-par-forward-member-if-special) // 3
// action: (json-par-forward-member-if-special) // 4
// action: (json-par-forward-member-if-special) // 5
// action: (json-par-forward-member-if-special) // 6
// test-end

// context-start
{
    /*6*/"": ""/*5*/,
    "a": {"a": "a", "a": "a"}/*4*/,
    "bb": ["b", "b"]/*3*/,
    "ccc": -111.111e+111/*2*/,
    "ddd": true/*1*/,
    "ee": false/*0*/,
    "f": null
}
// context-end
// action: (json-par-backward-member-if-special) // 1
// action: (json-par-backward-member-if-special) // 2
// action: (json-par-backward-member-if-special) // 3
// action: (json-par-backward-member-if-special) // 4
// action: (json-par-backward-member-if-special) // 5
// action: (json-par-backward-member-if-special) // 6
// test-end


//// Before array values.

// context-start
[
    /*0*/"",
    /*1*/{"a": "a", "a": "a"},
    /*2*/["b", "b"],
    /*3*/-111.111e+111,
    /*4*/true,
    /*5*/false,
    /*6*/null/*7*//*8*/
]
// context-end
// action: (json-par-forward-member-if-special) // 1
// action: (json-par-forward-member-if-special) // 2
// action: (json-par-forward-member-if-special) // 3
// action: (json-par-forward-member-if-special) // 4
// action: (json-par-forward-member-if-special) // 5
// action: (json-par-forward-member-if-special) // 6
// action: (json-par-forward-member-if-special) // 7
// action: (json-par-forward-member-if-special) // 8
// test-end

// context-start
[
    /*6*//*7*/"",
    /*5*/{"a": "a", "a": "a"},
    /*4*/["b", "b"],
    /*3*/-111.111e+111,
    /*2*/true,
    /*1*/false,
    /*0*/null
]
// context-end
// action: (json-par-backward-member-if-special) // 1
// action: (json-par-backward-member-if-special) // 2
// action: (json-par-backward-member-if-special) // 3
// action: (json-par-backward-member-if-special) // 4
// action: (json-par-backward-member-if-special) // 5
// action: (json-par-backward-member-if-special) // 6
// action: (json-par-backward-member-if-special) // 7
// test-end


//// Before commas in an array.

// context-start
[
    ""/*0*/,
    {"a": "a", "a": "a"}/*1*/,
    ["b", "b"]/*2*/,
    -111.111e+111/*3*/,
    true/*4*/,
    false/*5*/,
    null/*6*/
]
// context-end
// action: (json-par-forward-member-if-special) // 1
// action: (json-par-forward-member-if-special) // 2
// action: (json-par-forward-member-if-special) // 3
// action: (json-par-forward-member-if-special) // 4
// action: (json-par-forward-member-if-special) // 5
// action: (json-par-forward-member-if-special) // 6
// test-end

// context-start
[
    /*6*/""/*5*/,
    {"a": "a", "a": "a"}/*4*/,
    ["b", "b"]/*3*/,
    -111.111e+111/*2*/,
    true/*1*/,
    false/*0*/,
    null
]
// context-end
// action: (json-par-backward-member-if-special) // 1
// action: (json-par-backward-member-if-special) // 2
// action: (json-par-backward-member-if-special) // 3
// action: (json-par-backward-member-if-special) // 4
// action: (json-par-backward-member-if-special) // 5
// action: (json-par-backward-member-if-special) // 6
// test-end


//// Inside a string.

// context-start
[
    "abc",
    "a/*0[*//*1[*/b/*|]0*/c",
    "abc"/*|]1*/
]
// context-end
// action: (json-par-forward-member-if-special) // 1
// test-end

// context-start
[
    "abc"/*1[|*/,
    "a/*]1*//*0[*/b/*|]0*/c",
    "abc"
]
// context-end
// action: (json-par-backward-member-if-special) // 1
// test-end


//// Inside a number.

// context-start
[
    "abc",
    -11/*0*/1.111e+111,
    "abc"/*1*/
]
// context-end
// action: (json-par-forward-member-if-special) // 1
// test-end

// context-start
[
    "abc"/*1*/,
    -11/*0*/1.111e+111,
    "abc"
]
// context-end
// action: (json-par-backward-member-if-special) // 1
// test-end


//// Inside a constant.

// context-start
[
    "abc",
    tr/*0*/ue,
    "abc"/*1*/
]
// context-end
// action: (json-par-forward-member-if-special) // 1
// test-end

// context-start
[
    "abc"/*1*/,
    tr/*0*/ue,
    "abc"
]
// context-end
// action: (json-par-backward-member-if-special) // 1
// test-end


//// With arg.

// context-start
[
    "abc",
    tr/*0*/ue,
    "abc"/*1*/
]
// context-end
// action: (json-par-forward-member-if-special) // 1
// test-end

// context-start
[
    /*0*//*2*//*4*/"abc",
    "abc",
    /*1*//*3*//*5*/"abc"
]
// context-end
// action: (json-par-forward-member 2) // 1
// action: (json-par-forward-member -2) // 2
// action: (json-par-forward-member 2) // 3
// action: (json-par-backward-member 2) // 4
// action: (json-par-backward-member -2) // 5
// test-end


/// out-forward/backward.

//// From array/object.

// context-start
/*3*/{
    "aaa": [
        {
            "bbb": "bbb"
        }
    ],
    "ccc": /*2*/[
        {
            "ddd": "ddd"
        },
        -111.111e+111,
        true,
        false,
        null,
        /*1*/{
            "eee": /*0*/"eee"
        }
    ]
}
// context-end
// action: (json-par-up-backward-if-special) // 1
// action: (json-par-up-backward-if-special) // 2
// action: (json-par-up-backward-if-special) // 3
// test-end

// context-start
{
    "aaa": [
        {
            /*0*/"bbb": "bbb"
        }/*1*/,
        -111.111e+111,
        true,
        false,
        null,
        {
            "eee": "eee"
        }
    ]/*2*/,
    "ccc": [
        {
            "ddd": "ddd"
        }
    ]
}/*3*/
// context-end
// action: (json-par-up-forward-if-special) // 1
// action: (json-par-up-forward-if-special) // 2
// action: (json-par-up-forward-if-special) // 3
// test-end


//// From string.

// context-start
{
    "aaa": /*1[|*/"a[\"/*0[*//*]1*/a/*|]0*/\"]a"
}
// context-end
// action: (json-par-up-backward-if-special) // 1
// test-end

// context-start
{
    "aaa": "a[\"/*0[*//*1[*/a/*|]0*/\"]a"/*|]1*/,
    "bbb": "bbb"
}
// context-end
// action: (json-par-up-forward-if-special) // 1
// test-end


//// From number.

// context-start
/*2*/{
    "aaa": /*1*/-111.111e/*0*/+111
}
// context-end
// action: (json-par-up-backward-if-special) // 1
// action: (json-par-up-backward-if-special) // 2
// test-end

// context-start
{
    "aaa": -111/*0*/e+111/*1*/,
    "bbb": "bbb"
}/*2*/
// context-end
// action: (json-par-up-forward-if-special) // 1
// action: (json-par-up-forward-if-special) // 2
// test-end


//// From constnt.

// context-start
/*2*/{
    "aaa": /*1*/fals/*0*/e
}
// context-end
// action: (json-par-up-backward-if-special) // 1
// action: (json-par-up-backward-if-special) // 2
// test-end

// context-start
{
    "aaa": fals/*0*/e/*1*/,
    "bbb": "bbb"
}/*2*/
// context-end
// action: (json-par-up-forward-if-special) // 1
// action: (json-par-up-forward-if-special) // 2
// test-end


//// With arg.

// context-start
/*2*/{
    "aaa": [
        /*1*/{
            "bbb": fals/*0*/e
        }
    ]
}
// context-end
// action: (json-par-up-backward 2) // 1
// action: (json-par-up-backward 2) // 2
// test-end

// context-start
/*2*/{
    "aaa": [
        /*1*/{
            "bbb": fals/*0*/e
        }
    ]
}
// context-end
// action: (json-par-up-forward -2) // 1
// action: (json-par-up-forward -2) // 2
// test-end


// context-start
{
    "aaa": [
        {
            "bbb": fals/*0*/e
        }/*1*/
    ]
}/*2*/
// context-end
// action: (json-par-up-forward 2) // 1
// action: (json-par-up-forward 2) // 2
// test-end

// context-start
{
    "aaa": [
        {
            "bbb": fals/*0*/e
        }/*1*/
    ]
}/*2*/
// context-end
// action: (json-par-up-backward -2) // 1
// action: (json-par-up-backward -2) // 2
// test-end


/// beginning-of-member/end-of-member

// context-start
{
    /*1*//*2*/"/*0*/": 1
}
// context-end
// action: (json-par-beginning-of-member) // 1
// action: (json-par-beginning-of-member) // 2
// test-end


// context-start
{
    "": 1, /*1*//*2*/"/*0*/": 1
}
// context-end
// action: (json-par-beginning-of-member) // 1
// action: (json-par-beginning-of-member) // 2
// test-end

// context-start
{
    "": 1, /*1*/""/*0*/: 1
}
// context-end
// action: (json-par-beginning-of-member) // 1
// test-end

// context-start
{
    "": 1, /*1*/"":/*0*/ 1
}
// context-end
// action: (json-par-beginning-of-member) // 1
// test-end

// context-start
{
    "": 1, /*1*/"": 1/*0*/
}
// context-end
// action: (json-par-beginning-of-member) // 1
// test-end

// context-start
{
    "": 1, /*1*/"": 1/*0*/, "": 1
}
// context-end
// action: (json-par-beginning-of-member) // 1
// test-end

// context-start
{
    "": 1,/*0*/ /*1*/"": 1
}
// context-end
// action: (json-par-beginning-of-member) // 1
// test-end

// context-start
{
    "": 1, /*1*/"": 1/*0*/1
}
// context-end
// action: (json-par-beginning-of-member) // 1
// test-end

// context-start
{
    "": 1, /*1*/"": n/*0*/ull
}
// context-end
// action: (json-par-beginning-of-member) // 1
// test-end


/// beginning-of-object-value

// context-start
{
    /*0*/"a": /*1*/"aaa"
}
// context-end
// action: (json-par-beginning-of-object-value) // 1
// test-end

// context-start
{
    /*0*//*1*/"a" "aaa"
}
// context-end
// action: (json-par-beginning-of-object-value) // 1
// test-end

// context-start
{
    /*0*/: /*1*/"aaa"
}
// context-end
// action: (json-par-beginning-of-object-value) // 1
// test-end

// context-start
{
    /*0*/: /*1*/
}
// context-end
// action: (json-par-beginning-of-object-value) // 1
// test-end

// context-start
{
    /*0*/: /*1*/, "a": "aaa"
}
// context-end
// action: (json-par-beginning-of-object-value) // 1
// test-end

// context-start
{
    /*0*//*1*/"aaa"
}
// context-end
// action: (json-par-beginning-of-object-value) // 1
// test-end

// context-start
{
    /*0*//*1*/1 "aaa"
}
// context-end
// action: (json-par-beginning-of-object-value) // 1
// test-end

// context-start
{
    /*1*/1 /*0*/"aaa"
}
// context-end
// action: (json-par-beginning-of-object-value) // 1
// test-end


/// forward-record/backward-record.

// context-start
[
    {
        "a": "aaa",
        /*0*//*5*//*6*/"b": "bbb",
        "c": "ccc"
    },
    {
        "a": "aaa",
        "c": "ccc"
    },
    {
        "a": "aaa",
        /*1*//*4*/"b": "bbb",
        "c": "ccc"
    },
    {
        "a": "aaa",
        /*2*//*3*/"\u0062": "bbb",
        "c": "ccc"
    }
]
// context-end
// action: (json-par-forward-record-if-special) // 1
// action: (json-par-forward-record-if-special) // 2
// action: (json-par-forward-record-if-special) // 3
// action: (json-par-backward-record-if-special) // 4
// action: (json-par-backward-record-if-special) // 5
// action: (json-par-backward-record-if-special) // 6
// test-end

// context-start
[
    {
        "a": "aaa",
        "b"/*0*//*5*//*6*/: "bbb",
        "c": "ccc"
    },
    {
        "a": "aaa",
        "c": "ccc"
    },
    {
        "a": "aaa",
        "b"/*1*//*4*/: "bbb",
        "c": "ccc"
    },
    {
        "a": "aaa",
        "\u0062"/*2*//*3*/: "bbb",
        "c": "ccc"
    }
]
// context-end
// action: (json-par-forward-record-if-special) // 1
// action: (json-par-forward-record-if-special) // 2
// action: (json-par-forward-record-if-special) // 3
// action: (json-par-backward-record-if-special) // 4
// action: (json-par-backward-record-if-special) // 5
// action: (json-par-backward-record-if-special) // 6
// test-end

// context-start
[
    {
        "a": "aaa",
        "b": /*0*//*5*//*6*/"bbb",
        "c": "ccc"
    },
    {
        "a": "aaa",
        "c": "ccc"
    },
    {
        "a": "aaa",
        "b": /*1*//*4*/"bbb",
        "c": "ccc"
    },
    {
        "a": "aaa",
        "\u0062": /*2*//*3*/"bbb",
        "c": "ccc"
    }
]
// context-end
// action: (json-par-forward-record-if-special) // 1
// action: (json-par-forward-record-if-special) // 2
// action: (json-par-forward-record-if-special) // 3
// action: (json-par-backward-record-if-special) // 4
// action: (json-par-backward-record-if-special) // 5
// action: (json-par-backward-record-if-special) // 6
// test-end

// context-start
[
    {
        "a": "aaa",
        "b": "bbb"/*0*//*5*//*6*/,
        "c": "ccc"
    },
    {
        "a": "aaa",
        "c": "ccc"
    },
    {
        "a": "aaa",
        "b": "bbb"/*1*//*4*/,
        "c": "ccc"
    },
    {
        "a": "aaa",
        "\u0062": "bbb"/*2*//*3*/,
        "c": "ccc"
    }
]
// context-end
// action: (json-par-forward-record-if-special) // 1
// action: (json-par-forward-record-if-special) // 2
// action: (json-par-forward-record-if-special) // 3
// action: (json-par-backward-record-if-special) // 4
// action: (json-par-backward-record-if-special) // 5
// action: (json-par-backward-record-if-special) // 6
// test-end

// context-start
[
    [
        "aaa",
        "bbb",
        /*0*//*5*//*6*/"ccc"
    ],
    [
        "aaa",
        "bbb"
    ],
    [
        "aaa",
        "bbb",
        /*1*//*4*/"ccc"
    ],
    [
        "aaa",
        "bbb",
        /*2*//*3*/"ccc"
    ]
]
// context-end
// action: (json-par-forward-record-if-special) // 1
// action: (json-par-forward-record-if-special) // 2
// action: (json-par-forward-record-if-special) // 3
// action: (json-par-backward-record-if-special) // 4
// action: (json-par-backward-record-if-special) // 5
// action: (json-par-backward-record-if-special) // 6
// test-end

// context-start
[
    [
        "aaa",
        "bbb",
        "ccc"/*0*//*5*//*6*/
    ],
    [
        "aaa",
        "bbb"
    ],
    [
        "aaa",
        "bbb",
        "ccc"/*1*//*4*/
    ],
    [
        "aaa",
        "bbb",
        "ccc"/*2*//*3*/
    ]
]
// context-end
// action: (json-par-forward-record-if-special) // 1
// action: (json-par-forward-record-if-special) // 2
// action: (json-par-forward-record-if-special) // 3
// action: (json-par-backward-record-if-special) // 4
// action: (json-par-backward-record-if-special) // 5
// action: (json-par-backward-record-if-special) // 6
// test-end

// context-start
{
  "a": [
    {
      "b":  [
        1, /*0*//*5*//*6*/2, 3
      ]
    },
    {
      "b": [
      ]
    }
  ],
  "d": [
    {
      "c": [
        1, /*1*//*4*/2, 3
      ]
    },
    {
      "b": [
        1, /*2*//*3*/2, 3
      ]
    }
  ]
}
// context-end
// action: (json-par-forward-record-if-special) // 1
// action: (json-par-forward-record-if-special) // 2
// action: (json-par-forward-record-if-special) // 3
// action: (json-par-backward-record-if-special) // 4
// action: (json-par-backward-record-if-special) // 5
// action: (json-par-backward-record-if-special) // 6
// test-end


/// down

// context-start
{
  "a": /*0*/[
    /*1*/{
      "b":  /*2*/[
        /*3*/" /*4*/c ", "d"
      ]
    }
  ]
}
// context-end
// action: (json-par-down-if-special) // 1
// action: (json-par-down-if-special) // 2
// action: (json-par-down-if-special) // 3
// action: (json-par-down-if-special) // 4
// test-end

// context-start
{
  "a": [
    {
      "b":  [
        "c", " d/*4*/ "/*3*/
      ]/*2*/
    }/*1*/
  ]/*0*/
}
// context-end
// action: (json-par-down-if-special) // 1
// action: (json-par-down-if-special) // 2
// action: (json-par-down-if-special) // 3
// action: (json-par-down-if-special) // 4
// test-end

// context-start
{
  " a/*1*/ "/*0*/: []
}
// context-end
// action: (json-par-down-if-special) // 1
// test-end

// context-start
[
  /*0*//*1*/1
]
// context-end
// action: (json-par-down-if-special) // 1
// test-end

// context-start
[
  1/*0*//*1*/
]
// context-end
// action: (json-par-down-if-special) // 1
// test-end

// context-start
[
  12/*0*//*1*/3
]
// context-end
// action: (json-par-down-if-special) // 1
// test-end

// context-start
[
  1,
  /*0*//*1*/,
  3
]
// context-end
// action: (json-par-down-if-special) // 1
// test-end

// context-start
[
  /*0*//* /*1*/a */1
]
// context-end
// action: (json-par-down-if-special) // 1
// test-end

// context-start
[
  1 /* a/*1*/ *//*0*/
]
// context-end
// action: (json-par-down-if-special) // 1
// test-end

// context-start
[
  /* a */ /*0*/ /* /*1*/b */ 1
]
// context-end
// action: (json-par-down-if-special) // 1
// test-end

// context-start
[
  /*0*/"/*1*/   "
]
// context-end
// action: (json-par-down-if-special) // 1
// test-end

// context-start
[
  "   /*1*/"/*0*/
]
// context-end
// action: (json-par-down-if-special) // 1
// test-end

// context-start
[
  /*0*/[/*1*/   ]
]
// context-end
// action: (json-par-down-if-special) // 1
// test-end

// context-start
[
  [   /*1*/]/*0*/
]
// context-end
// action: (json-par-down-if-special) // 1
// test-end

// context-start
[
  /*0*/{
    /*1*/"a": 1
  }
]
// context-end
// action: (json-par-down nil 'member) // 1
// test-end


/// beginning-of-list/end-of-list

// context-start
[
  /*1*//*2*/true,
  /*0*/false,
  null/*3*//*4*/
]
// context-end
// action: (json-par-beginning-of-list-if-special) // 1
// action: (json-par-beginning-of-list-if-special) // 2
// action: (json-par-end-of-list-if-special) // 3
// action: (json-par-end-of-list-if-special) // 3
// test-end

// context-start
{
  /*1*//*2*/"a": true,
  "b"/*0*/: false,
  "c": null/*3*//*4*/
}
// context-end
// action: (json-par-beginning-of-list-if-special) // 1
// action: (json-par-beginning-of-list-if-special) // 2
// action: (json-par-end-of-list-if-special) // 3
// action: (json-par-end-of-list-if-special) // 3
// test-end


/// tab

// context-start
{
  "b/*0*/": /*1*/true
}
// context-end
// action: (execute-kbd-macro "\t") // 1
// test-end
